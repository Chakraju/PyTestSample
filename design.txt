1. Introduction
This updated document outlines the design for a Python-based automation tool that creates ServiceNow records based on data from another ServiceNow application used to track database approvals. Instead of YAML input, the program will fetch records from the approval tracking app and use them to create records in the release tracking app.
2. Overview
The automation tool will:
• Query a source ServiceNow application using the REST API to fetch approved database release requests.
• Extract fields such as database name, release date, and stakeholder information.
• Use this data to populate target tables in the release tracking ServiceNow application.
3. Data Flow and Integration
1. Fetch approved release records from the source ServiceNow app.
2. Extract necessary fields.
3. Transform and map the data for the target app.
4. Create new records in the target app's database, release, and stakeholder tables.
4. System Design
The system consists of the following components:
4.1 Source ServiceNow Application
• Used for tracking database approvals.
• Data source for the automation program.
4.2 Target ServiceNow Application
• Used for tracking database releases.
• Destination for the new records created by the program.
4.3 Python Modules
• servicenow_client.py – Handles API calls to both source and target applications.
• data_mapper.py – Maps fields between the two applications.
• main.py – Coordinates the process of fetching, mapping, and creating records.
5. Authentication
Use Basic Authentication or OAuth 2.0 for API access to both ServiceNow applications. Ensure access tokens or credentials support both read (source) and write (target) operations.
